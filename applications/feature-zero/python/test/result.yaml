config:
- table_name: t1
  column:
  - name: c1
    datatype: String
  - name: c2
    datatype: Timestamp
  - name: c3
    datatype: Double
  - name: c4
    datatype: String
  index: c1
- table_name: t2
  column:
  - name: c1
    datatype: String
  - name: c2
    datatype: Timestamp
  - name: c3
    datatype: Double
  index: c3
desc: original | multi_* | window_* |combine op
fz:
- window_count(t1.c1,t1.c2,604801s:100:0s,t1.c3)
- window_avg(t2.c1,t2.c2,10:0,t2.c3)
- window_min(t2.c1,t2.c2,10:0,t2.c3)
- window_max(t2.c1,t2.c2,10:0,t2.c3)
- original(t1.c1)
- combine(t1.c1,t1.c2,t1.c3)
- multi_direct(t1,t2.c2)
- multi_last_value(t1,t2.c3,2147483645:0)
input: null
expected: null
sql: "\nselect * from \n(\nselect\n    `c1` as c1_1,\n    case when !isnull(at(`c3`,\
  \ 0)) over t1_c2_c1_0s_604801s_100 then count_where(`c3`, `c3` = at(`c3`, 0)) over\
  \ t1_c2_c1_0s_604801s_100 else null end as t1_c3_window_count_0,\n    `c1` as t1_c1_original_4,\n\
  \    `c1` as t1_c1_combine_5,\n    `c2` as t1_c2_combine_5,\n    `c3` as t1_c3_combine_5,\n\
  \    `c2` as t1_c2_combine_6,\n    `c3` as t1_c3_combine_6,\n    `c4` as t1_c4_combine_6\n\
  from\n    `t1`\n    window t1_c2_c1_0s_604801s_100 as (partition by `c2` order by\
  \ `c1` rows_range between 604801s preceding and 0s preceding MAXSIZE 100))\nas out0\n\
  last join\n(\nselect\n    `c1` as c1_2,\n    avg(`c3`) over t2_c2_c1_0_10_ as t2_c3_window_avg_1,\n\
  \    min(`c3`) over t2_c2_c1_0_10_ as t2_c3_window_min_2,\n    max(`c3`) over t2_c2_c1_0_10_\
  \ as t2_c3_window_max_3\nfrom\n    `t2`\n    window t2_c2_c1_0_10_ as (partition\
  \ by `c2` order by `c1` rows between 10 preceding and 0 preceding))\nas out1\non\
  \ out0.c1_1 = out1.c1_2\nlast join\n(\nselect\n    `t1`.`c1` as c1_12,\n    `t2_c3`.`c2`\
  \ as t2_c2_multi_direct_7,\n    `t2_c3`.`c3` as t2_c3_multi_last_value_8\nfrom\n\
  \    `t1`\n    last join `t2` as `t2_c3` on `t1`.`c1` = `t2_c3`.`c3`)\nas out2\n\
  on out0.c1_1 = out2.c1_12\n;"
column: 'key_t1_c1_1 = window(table=t1, output="t1_output")

  t1_outputkey_t1_c1 = output(key_t1_c1_1.c1[0])

  f_original_c1_4 = column(key_t1_c1_1.c1[0])

  f_combine_5_7 = column(key_t1_c1_1.c1[0])

  f_combine_5_8 = column(key_t1_c1_1.c2[0])

  f_combine_5_9 = column(key_t1_c1_1.c3[0])

  f_combine_6_10 = column(key_t1_c1_1.c2[0])

  f_combine_6_11 = column(key_t1_c1_1.c3[0])

  f_combine_6_12 = column(key_t1_c1_1.c4[0])

  t1_c1_c2 = window(table=t1, keys=[c2], order=c1, max_size=100, at_least=10, offset=604801s,
  output="t1_output")

  f_t1_window_count_c3_0 = column(if(t1_c1_c2.c3[0] != null, count(t1_c1_c2.c3[0],
  t1_c1_c2.c3[0s:604801s]), null))

  f_t1_window_avg_c3_1 = column(avg(t1_c1_c2.c3[0:10]))

  f_t1_window_min_c3_2 = column(min(t1_c1_c2.c3[0:10]))

  f_t1_window_max_c3_3 = column(max(t1_c1_c2.c3[0:10]))

  join_t1 = select(t1, c1 as t1_c1, c2 as t1_c2, c3 as t1_c3, c4 as t1_c4)

  join_t2 = select(t2, c1 as t2_c1, c2 as t2_c2, c3 as t2_c3)

  join_t1_join_t2_last = lastjoin(join_t1, join_t2, join_t1.t1_c1 == join_t2.t2_c3,
  join_t2.t2_ between (unbound, join_t1.t1_))

  join_t1_join_t2_last_window = window(join_t1_join_t2_last, "join_t1_join_t2_last_join_output")

  f_t1_t2_c3_lastvalue_8 = column(join_t1_join_t2_last_window.t2_c3[0])

  lastjoinkey_t1_c1 = output(join_t1_join_t2_last_window.t1_c1[0])

  join_t1_join_t2_left = leftjoin(join_t1, join_t2, "join_t1.t1_c1 = join_t2.t2_c3")

  join_t1_join_t2_left_window = window(join_t1_join_t2_left, "join_t1_join_t2_left_join_output")

  f_t1_t2_c2_direct_7 = column(join_t1_join_t2_left_window.t2_c2[0])

  leftjoinkey_t1_c1 = output(join_t1_join_t2_left_window.t1_c1[0])

  join_t1_join_t2_left_join_output_join_t1_join_t2_last_join_output = leftjoin(join_t1_join_t2_left_join_output,
  join_t1_join_t2_last_join_output, "join_t1_join_t2_left_join_output.leftjoinkey_t1_c1
  = join_t1_join_t2_last_join_output.lastjoinkey_t1_c1")

  join_t1_join_t2_left_join_output_join_t1_join_t2_last_join_output_t1_output = leftjoin(join_t1_join_t2_left_join_output_join_t1_join_t2_last_join_output,
  t1_output, "join_t1_join_t2_left_join_output_join_t1_join_t2_last_join_output.leftjoinkey_t1_c1
  = t1_output.t1_outputkey_t1_c1")'

